##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
# This is a generic role test for helm value files
# inputs are:
#   helmtemplate_type: The type of helmtemple, this matches to the chart name
#   chart_path: Helm chart directory path (absolute to project root)
#   value_file: Helmrelease value file path (absolute to project root)
# 


- name: Print value_file comng from file   
  debug:
    msg: "value_file: {{value_file }}"  #/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml"
  when: value_file is defined

# Check if input value file exists
- name: "Check if value file exists"
  stat:
    path: "{{ value_file }}"
  register: value_stat_result    #value_stat_result.stat.exists == True

- name: Print value of the register variable
  debug:
    var: value_stat_result   

# - name: Check if file exists
#   debug:
#     msg: "Value file exists: {{ value_stat_result.stat }}"

 

# create temp test directory
- name: "Check or create test directory"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/directory"
  vars:
    path: "./build/test"
  when: value_stat_result.stat.exists == True

# create temp test directory
- name: Load file into memory
  include_vars: "{{ value_file }}"
  when: value_stat_result.stat.exists == True


- name: Print metadata.name comng from file   
  debug:  #supplychain-cacerts-job
    msg: "metadata.name: {{metadata.name }}"  #/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml"
  when: metadata.name is defined  

- name: Print spec.get('values') comng from file   
  debug:
    msg: "spec.get('values'): {{spec.get('values') }}"  #/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml"
  when: spec.get('values') is defined    

# Create the helmvalue file to run test
- name: "Create value file"     #/home/bevel/platforms/hyperledger-fabric/configuration/build/test/supplychain-cacerts-job.yaml
  local_action: copy content="{{ spec.get('values') | to_nice_yaml }}" dest="./build/test/{{metadata.name}}.yaml"
  when: value_stat_result.stat.exists == True
  changed_when: false   #"msg": "spec.get('values'): {'metadata': {'name': 'supplychain', 'component_name': 'supplychain-net', 'namespace': 'supplychain-net', 'images': {'alpineutils': 'ghcr.io/hyperledger/bevel-alpine:latest'}}, 'vault': {'role': 'vault-role', 'address': 'http://127.0.0.1:8200', 'authpath': 'devsupplychain-net-auth', 'secretcryptoprefix': 'secretsv2/data/crypto/ordererOrganizations/supplychain-net/ca', 'secretcredentialsprefix': 'secretsv2/data/credentials/supplychain-net/ca/supplychain', 'serviceaccountname': 'vault-auth', 'type': 'hashicorp', 'imagesecretname': ''}, 'ca': {'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net.org1proxy.blockchaincloudpoc.com'}}"



# Execute helm lint. If this fails, fix the errors
- name: "Run helm lint"
  shell: | # helm lint -f /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/fabric-cacerts-gen\
    helm lint -f "./build/test/{{metadata.name}}.yaml" "{{playbook_dir}}/../../../{{chart_path}}/{{charts[helmtemplate_type]}}"  
  when: value_stat_result.stat.exists == True
